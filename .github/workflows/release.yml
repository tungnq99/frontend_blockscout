name: Release

on:
    workflow_dispatch:
    release:
        types: [ released ]

jobs:
    remove_prerelease_label:
        name: Remove pre-release label from issues
        runs-on: ubuntu-latest
        steps:
            -   name: Remove label
                id: tags
                uses: actions/github-script@v6
                env:
                    LABEL_NAME: pre-release
                with:
                    script: |
                        const { data: issues } = await github.request('GET /repos/{owner}/{repo}/issues', {
                            owner: context.repo.owner,
                            repo: context.repo.repo,
                            labels: process.env.LABEL_NAME,
                            state: 'all'
                        });
                
                        const issueIds = issues.map(({ node_id }) => node_id);
                        const labelId = issues[0].labels.find(({ name }) => name === process.env.LABEL_NAME).node_id;

                        core.info(`Found ${ issueIds.length } issues with label "${ process.env.LABEL_NAME }"`);

                        for (const issueId of issueIds) {
                            core.info(`Removing label for issue with node_id ${ issueId }...`);

                            await github.graphql(`
                                mutation($input: RemoveLabelsFromLabelableInput!) {
                                    removeLabelsFromLabelable(input: $input) {
                                        clientMutationId
                                    }
                                }
                                `, {
                                input: {
                                    labelIds: [ labelId ],
                                    labelableId: issueId
                                },
                            });

                            core.info('Done.\n');
                        }


    label_released_issues:
        name: Label released issues
        uses: './.github/workflows/label-issues-in-release.yml'
        with:
            tag: ${{ github.ref_name }}
            label_name: ${{ github.ref_name }}
            label_description: Release ${{ github.ref_name }}
        secrets: inherit

    update_project_cards:
        name: Update project tasks statuses
        needs: label_released_issues
        uses: './.github/workflows/update-project-cards.yml'
        with:
            project_name: ${{ vars.PROJECT_NAME }}
            field_name: Status
            field_value: Released
            issues: ${{ needs.label_released_issues.outputs.issues }}
        secrets: inherit

    # TODO @tom2drum refactor to reusable workflow
    publish_image:
        name: Publish Docker image
        runs-on: ubuntu-latest
        outputs:
            shortSha: ${{ steps.output-step.outputs.short-sha }}
            tags: ${{ steps.meta.outputs.tags }}
        steps:
            -   name: Check out the repo
                uses: actions/checkout@v3
    
            -   name: Inject slug/short variables
                uses: rlespinasse/github-slug-action@v4.4.1
    
            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v2
    
            # Will automatically make nice tags, see the table here https://github.com/docker/metadata-action#basic
            -   name: Docker meta
                id: meta
                uses: docker/metadata-action@v4
                with:
                    images: ghcr.io/blockscout/frontend
    
            -   name: Login to GitHub Container Registry
                uses: docker/login-action@v2
                with:
                    registry: ghcr.io
                    username: ${{ github.actor }}
                    password: ${{ secrets.GITHUB_TOKEN }}
    
            -   name: Add SHORT_SHA env property with commit short sha
                run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

            -   name: Debug
                env:
                    REF_TYPE: ${{ github.ref_type }}
                    REF_NAME: ${{ github.ref_name }}
                run: |
                    echo "ref_type: $REF_TYPE"
                    echo "ref_name: $REF_NAME"
    
            -   name: Add outputs
                run: |
                    echo "::set-output name=short-sha::${{ env.GITHUB_EVENT_PULL_REQUEST_HEAD_SHA_SHORT }}"
                id: output-step
    
            -   name: Build and push
                uses: docker/build-push-action@v3
                with:
                    context: .
                    file: ./Dockerfile
                    push: true
                    cache-from: type=gha
                    tags: ${{ steps.meta.outputs.tags }}
                    labels: ${{ steps.meta.outputs.labels }}
                    build-args: |
                        GIT_COMMIT_SHA=${{ env.SHORT_SHA }}
                        GIT_TAG=${{ github.ref_type == 'tag' && github.ref_name || '' }}
